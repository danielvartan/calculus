1 / (-2)^2
?D
deriv(~ x^2)
deriv(~ x^2, "x")
D(expression(x^2), "x"
)
D(expression(x^9), "x")
D(deriv(~ x^2, "x"), "x")
D(expression(~ x^2, "x"), "x")
D(expression(~ x^2, "x")
D(expression(~ x^2), "x")
D(expression(x^2), "x")
f <- function(x) x^2
f
f(1)
f(2)
curve(f1, 5, -5)
curve(f, 5, -5)
curve(f, 100, -100)
curve(function(x) x^3, 5, -5)
curve(function(x) x^3, 100, 100)
curve(expression(function(x) x^3), 100, 100)
curve(function(x) x^2, 100, 100)
curve(function(x) x^2, 100, -100)
curve(function(x) x^2, 5, -5)
?curve
curve(~x, 5, -5)
curve(expression(~x), 5, -5)
v
expression(~x)
curve(expression(x^2), 5, -5)
curve(x^2, 5, -5)
curve(x^9, 5, -5)
curve(x^9, 100, -100)
install.packages("mosaicCalc", dependencies = TRUE)
getwd()
logistic_map <- function(R, x) R * (x - x^2)
logistic_map(2, 0.2)
logistic_map(2, 0.3)
data <- dplyr::tibble()
data
dplyr::tibble(t = seq(100), x = as.numeric(NA))
dplyr::tibble(t = 1, x = x)
R <- 2
x = 0.2
dplyr::tibble(t = 1, x = x)
?dplyr::rows_append
seq(2, 100)
R <- 2
x = 0.2
logistic_map <- function(R, x) R * (x - x^2)
data <- dplyr::tibble(t = 1, x = x)
for (i in seq(2, 100)) {
dplyr::rows_insert(
data,
dplyr::tibble(t = i), x = logistic_map(R, data$x[i - 1]))
}
data <- dplyr::tibble(t = 1, x = x)
data
i <- 2
for (i in seq(2, 100)) {
dplyr::rows_insert(
data,
dplyr::tibble(t = i), x = logistic_map(R, data$x[i - 1])
)
}
data$x[i - 1]
dplyr::tibble(t = i), x = logistic_map(R, data$x[i - 1])
dplyr::tibble(t = i, x = logistic_map(R, data$x[i - 1])
dplyr::tibble(t = i, x = logistic_map(R, data$x[i - 1]))
dplyr::rows_insert(
data,
dplyr::tibble(t = i, x = logistic_map(R, data$x[i - 1]))
)
R <- 2
x = 0.2
logistic_map <- function(R, x) R * (x - x^2)
data <- dplyr::tibble(t = 1, x = x)
for (i in seq(2, 100)) {
data <- data %>%
dplyr::rows_insert(
dplyr::tibble(t = i, x = logistic_map(R, data$x[i - 1]))
)
}
library(magrittr)
R <- 2
x = 0.2
logistic_map <- function(R, x) R * (x - x^2)
data <- dplyr::tibble(t = 1, x = x)
for (i in seq(2, 100)) {
data <- data %>%
dplyr::rows_insert(
dplyr::tibble(t = i, x = logistic_map(R, data$x[i - 1]))
)
}
data
library(magrittr)
R <- 2
x = 0.2
logistic_map <- function(R, x) R * (x - x^2)
data <- dplyr::tibble(t = 1, x = x)
for (i in seq(2, 100)) {
data <- data %>%
dplyr::rows_insert(
dplyr::tibble(t = i, x = logistic_map(R, data$x[i - 1])),
by = "t"
)
}
data
ggplot2::qplot("t", "x", data = data)
dplyr::lead(data$x)
dplyr::lag(data$x)
data <- data %>% dplyr::mutate(y = dplyr::lag(data$x))
ggplot2::qplot("t", "x", data = data)
ggplot2::qplot(x, y, data = data)
?ggplot2::qplot
ggplot2::qplot(x, y, data = data, geom = "line")
ggplot2::qplot(x, y, data = data, geom = "line", xlab = "x_t", ylab = "x_t+1")
seq(100)
ggplot2::qplot(x, y, data = data, geom = "line", xlab = "x_t", ylab = "x_t+1",
colour = "red")
ggplot2::qplot(x, y, data = data, geom = "line", xlab = "x_t", ylab = "x_t+1",
colour = "red", line = 2)
?ggplot2::geom_function
ggplot2::qplot(x, y, data = data, geom = "line", xlab = "x_t", ylab = "x_t+1",
colour = "red", na.rm = TRUE)
logistic_map <- function(x, R) R * (x - x^2)
ggplot2::ggplot(dplyr::tibble(x = seq(0, 100)), aes(x)) +
ggplot2::geom_function(fun = logistic_map(R = 2), colour = "red")
ggplot2::ggplot(dplyr::tibble(x = seq(0, 100)), ggplot2::aes(x)) +
ggplot2::geom_function(fun = logistic_map(R = 2), colour = "red")
logistic_map <- function(x, R = 2) R * (x - x^2)
ggplot2::ggplot(dplyr::tibble(x = seq(0, 100)), ggplot2::aes(x)) +
ggplot2::geom_function(fun = logistic_map, colour = "red")
ggplot2::ggplot(dplyr::tibble(x = seq(0, 1)), ggplot2::aes(x)) +
ggplot2::geom_function(fun = logistic_map, colour = "red")
logistic_map <- function(x, R = 2) R * (x - x^2)
data <- dplyr::tibble(t = 1, x = x)
for (i in seq(2, 100)) {
data <- data %>%
dplyr::rows_insert(
dplyr::tibble(t = i, x = logistic_map(data$x[i - 1]), R),
by = "t"
)
}
R <- 2
x = 0.2
logistic_map <- function(x, R = 2) R * (x - x^2)
data <- dplyr::tibble(t = 1, x = x)
data
for (i in seq(2, 100)) {
data <- data %>%
dplyr::rows_insert(
dplyr::tibble(t = i, x = logistic_map(data$x[i - 1]), R),
by = "t"
)
}
i - 1
data$x[i - 1])
data
data$x
data$x[1]
data$x[i - 1]
R
logistic_map(data$x[i - 1]), R)
logistic_map(data$x[i - 1], R)
R = 2.5
data <- dplyr::tibble(t = 1, x = x)
for (i in seq(2, 100)) {
data <- data %>%
dplyr::rows_insert(
dplyr::tibble(t = i, x = logistic_map(data$x[i - 1], R)),
by = "t"
)
}
data <- data %>% dplyr::mutate(y = dplyr::lag(data$x))
ggplot2::qplot(x, y, data = data, geom = "line", xlab = "x_t", ylab = "x_t+1",
colour = "red", na.rm = TRUE)
data
library(dplyr)
library(magrittr)
library(ggplot2)
logistic_map <- function(x, R = 2) R * (x - x^2)
R <- 2
x = 0.2
steps <- 100
data <- dplyr::tibble(t = 1, x = x)
for (i in seq(2, t)) {
data <- data %>%
dplyr::rows_insert(
dplyr::tibble(t = i, x = logistic_map(data$x[i - 1], R)),
by = "t"
)
}
seq(2, t)
library(dplyr)
library(magrittr)
library(ggplot2)
logistic_map <- function(x, R = 2) R * (x - x^2)
R <- 2
x = 0.2
steps <- 100
data <- dplyr::tibble(t = 1, x = x)
for (i in seq(2, steps)) {
data <- data %>%
dplyr::rows_insert(
dplyr::tibble(t = i, x = logistic_map(data$x[i - 1], R)),
by = "t"
)
}
data <- data %>% dplyr::mutate(y = dplyr::lag(data$x))
## Logistic map
ggplot2::qplot(x, y, data = data, geom = "line", xlab = "x_t", ylab = "x_t+1",
colour = "red", na.rm = TRUE)
## Logistic function
ggplot2::ggplot(dplyr::tibble(x = seq(0, 1)), ggplot2::aes(x)) +
ggplot2::geom_function(fun = logistic_map, colour = "red")
## Logistic trajectory
ggplot2::ggplot(dplyr::tibble(x = seq(0, 1)), ggplot2::aes(x)) +
ggplot2::geom_function(fun = logistic_map, colour = "red")
ggplot2::qplot(t, x, data = data, geom = "line", xlab = "t", ylab = "x_t",
colour = "red", na.rm = TRUE)
